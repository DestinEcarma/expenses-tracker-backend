{"version":3,"file":"static/js/572.6caa8ce1.chunk.js","mappings":"iKAkBA,QAdA,SAAwBA,GACvB,MAAOC,EAASC,IAAiBC,EAAAA,EAAAA,WAAS,GAU1C,MAAO,CAFcF,EAAU,OAAS,YALvCG,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASL,UAAWA,EAAWM,QAASA,IAAMJ,GAAeD,IAAaA,IAASM,SAC9FN,GAAUG,EAAAA,EAAAA,KAACI,EAAAA,IAAkB,KAAMJ,EAAAA,EAAAA,KAACK,EAAAA,IAAS,MAOjD,C,kIC8GA,QApHA,WACC,OAAO,SAAEC,EAAQ,SAAEC,GAAYC,IAAWT,EAAAA,EAAAA,UAAS,CAClDO,SAAU,GACVC,SAAU,KAELE,GAAcC,EAAAA,EAAAA,QAAyB,MACvCC,GAAcD,EAAAA,EAAAA,QAAyB,MACvCE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,MACTC,EAAAA,EAAAA,MACEC,MAAMC,IACN,OAAQA,GACP,KAAKC,EAAAA,EAAWC,GACf,OAAOP,EAAS,YACjB,KAAKM,EAAAA,EAAWE,aACf,OACD,QACC,MAAM,IAAIC,MAAM,yCAADC,OAA0CL,EAAU,MACrE,IAEAM,MAAMC,MAAM,GACZ,CAACZ,IAEJ,MAAOa,EAAcC,IAAUC,EAAAA,EAAAA,GAAe,iDAExCC,EAAYC,IACjB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAMG,OAEJ,IAADC,EAElBC,EAFM,aAATJ,EACgB,QAAnBG,EAAAxB,EAAY0B,eAAO,IAAAF,GAAnBA,EAAqBG,kBAAkB,IAEpB,QAAnBF,EAAAvB,EAAYwB,eAAO,IAAAD,GAAnBA,EAAqBE,kBAAkB,IAGxC5B,GAAS6B,IAAI,IAAWA,EAAM,CAACP,GAAOC,KAAS,EAwBhD,OACCO,EAAAA,EAAAA,MAAA,QAAMC,SAtBWV,IACjBA,EAAMW,kBAENC,EAAAA,EAAAA,IAASnC,EAAUC,GACjBS,MAAMC,IAAgB,IAADyB,EAAAC,EAAAC,EAAAC,EACrB,OAAQ5B,GACP,KAAKC,EAAAA,EAAW4B,QACf,OAAOlC,EAAS,YACjB,KAAKM,EAAAA,EAAW6B,YAKf,OAJmB,QAAnBL,EAAAjC,EAAY0B,eAAO,IAAAO,GAAnBA,EAAqBN,kBAAkB,iCACpB,QAAnBO,EAAAhC,EAAYwB,eAAO,IAAAQ,GAAnBA,EAAqBP,kBAAkB,iCACpB,QAAnBQ,EAAAnC,EAAY0B,eAAO,IAAAS,GAAnBA,EAAqBI,sBACF,QAAnBH,EAAAlC,EAAYwB,eAAO,IAAAU,GAAnBA,EAAqBG,kBAEtB,QACC,MAAM,IAAI3B,MAAM,yCAADC,OAA0CL,EAAU,MACrE,IAEAM,MAAMC,MAAM,EAIY5B,UAAU,wDAAuDO,SAAA,EAC1FH,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iEAAgEO,UAC7EH,EAAAA,EAAAA,KAACiD,EAAAA,IAAgB,OAElBX,EAAAA,EAAAA,MAAA,OAAK1C,UAAU,8BAA6BO,SAAA,EAC3CmC,EAAAA,EAAAA,MAAA,OAAK1C,UAAU,yDAAwDO,SAAA,EACtEH,EAAAA,EAAAA,KAACkD,EAAAA,IAAa,CAACtD,UAAU,4BACzBI,EAAAA,EAAAA,KAAA,SACCmD,GAAG,WACHrB,KAAK,WACLC,MAAOzB,EACPsB,SAAUA,EACVwB,IAAK3C,EACL4C,YAAY,WACZpD,KAAK,OACLL,UAAU,qEAGZ0C,EAAAA,EAAAA,MAAA,OAAK1C,UAAU,yDAAwDO,SAAA,EACtEH,EAAAA,EAAAA,KAACsD,EAAAA,IAAM,CAAC1D,UAAU,wCAClBI,EAAAA,EAAAA,KAAA,SACCmD,GAAG,WACHrB,KAAK,WACLC,MAAOxB,EACPqB,SAAUA,EACVwB,IAAKzC,EACL0C,YAAY,WACZpD,KAAMwB,EACN7B,UAAU,iEAEV8B,MAEF1B,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,uBAAsBO,UACpCH,EAAAA,EAAAA,KAAA,KAAGuD,KAAK,KAAK3D,UAAU,gBAAeO,SAAC,2BAKzCmC,EAAAA,EAAAA,MAAA,OAAK1C,UAAU,mCAAkCO,SAAA,EAChDH,EAAAA,EAAAA,KAAA,UACCC,KAAK,SACLL,UAAU,yHAAwHO,SAClI,WAGDH,EAAAA,EAAAA,KAAA,KACCuD,KAAK,WACL3D,UAAU,kIAAiIO,SAC3I,iBAML,C,kJCpHA,MAIMqD,EAAQ,GAAAlC,OADV,6CACuB,SACrBmC,EAAQ,GAAAnC,OAAMkC,EAAQ,SACtBE,EAAW,GAAApC,OAAMmC,EAAQ,YACzBE,EAAY,GAAArC,OAAMoC,EAAW,aAC7BE,EAAc,GAAAtC,OAAMoC,EAAW,eAE/BG,EAAwB,CAAEC,MAAM,GAEhCC,EAA4B,CACjCC,QAAS,CACR,eAAgB,oBAEjBC,YAAa,WAGRC,EAA2B,IAC7BH,EACHI,OAAQ,QAGHC,EAA0B,IAC5BL,EACHI,OAAQ,OAGHE,EAA6B,IAC/BN,EACHI,OAAQ,UAGHG,EAA4B,IAC9BP,EACHI,OAAQ,SAGHI,EAAgB,2DAEfC,eAAezD,IACrB,OAAO0D,MAAM,GAADnD,OAAImC,GAAYW,GAAYpD,MAAM0D,IAC7C,GAAIA,EAASC,SAAWzD,EAAAA,EAAW0D,sBAClC,MAAM,IAAIvD,MAAMkD,GAGjB,OAAOG,EAASC,MAAM,GAExB,CAEOH,eAAeK,EAAOvE,EAAkBC,GAC9C,OAAOkE,MAAM,GAADnD,OAAIkC,EAAQ,YAAY,IAChCU,EACHY,KAAMC,KAAKC,UAAU,CAAE1E,WAAUC,eAC/BS,MAAM0D,IACR,GAAIA,EAASC,SAAWzD,EAAAA,EAAW0D,sBAClC,MAAM,IAAIvD,MAAMkD,GAGjB,OAAOG,EAASC,MAAM,GAExB,CAEOH,eAAeS,EAAM3E,EAAkBC,GAC7C,OAAOkE,MAAM,GAADnD,OAAIkC,EAAQ,UAAU,IAC9BU,EACHY,KAAMC,KAAKC,UAAU,CAAE1E,WAAUC,eAC/BS,MAAM0D,IACR,GAAIA,EAASC,SAAWzD,EAAAA,EAAW0D,sBAClC,MAAM,IAAIvD,MAAMkD,GAGjB,OAAOG,EAASC,MAAM,GAExB,CAEOH,eAAeU,IACrB,OAAOT,MAAM,GAADnD,OAAIkC,EAAQ,WAAWa,GAAerD,MAAM0D,IACvD,GAAIA,EAASC,SAAWzD,EAAAA,EAAW0D,sBAClC,MAAM,IAAIvD,MAAMkD,GAGjB,OAAOG,EAASC,MAAM,GAExB,CAEOH,eAAeW,IACrB,OAAOV,MAAM,GAADnD,OAAIsC,GAAkBQ,GAAYpD,MAAKwD,UAClD,GAAIE,EAASC,SAAWzD,EAAAA,EAAW0D,sBAClC,MAAM,IAAIvD,MAAMkD,GAGjB,MAAO,EAACa,EAAAA,EAAAA,SAAoBV,EAASW,OAAQxB,GAAsCa,EAASC,OAAO,GAErG,CAEOH,eAAec,EAAgBC,GACrC,OAAOd,MAAM,GAADnD,OAAIqC,EAAY,KAAArC,OAAIiE,EAAU,iBAAiBnB,GAAYpD,MAAKwD,UAC3E,GAAIE,EAASC,SAAWzD,EAAAA,EAAW0D,sBAClC,MAAM,IAAIvD,MAAMkD,GAGjB,MAAMiB,GAAOJ,EAAAA,EAAAA,SAAoBV,EAASW,OAAQxB,GAOlD,OALA2B,EAAKC,aAAeD,EAAKC,aAAaC,KAAKC,IAAW,IAClDA,EACHC,UAAW,IAAIC,KAAKF,EAAYC,eAG1B,CAACJ,EAAMd,EAASC,OAAO,GAEhC,CAEOH,eAAesB,EAAYhE,EAAciE,GAC/C,OAAOtB,MAAM,GAADnD,OAAIsC,GAAkB,IAC9BM,EACHY,KAAMC,KAAKC,UAAU,CAAElD,OAAMiE,WAC3B/E,MAAKwD,UACP,GAAIE,EAASC,SAAWzD,EAAAA,EAAW0D,sBAClC,MAAM,IAAIvD,MAAMkD,GAGjB,MAAO,CACN,UACWG,EAASW,OACnBvD,OACAiE,OACAN,aAAc,EACdO,OAAQ,EACRC,QAAS,EACTC,MAAO,WAERxB,EAASC,OACT,GAEH,CAEOH,eAAe2B,EACrBZ,EACAa,EACAJ,GAEA,OAAOvB,MAAM,GAADnD,OAAIqC,EAAY,KAAArC,OAAIiE,EAAU,iBAAiB,IACvDrB,EACHY,KAAMC,KAAKC,UAAU,CAAEgB,SAAQI,kBAC7BpF,MAAKwD,UACP,GAAIE,EAASC,SAAWzD,EAAAA,EAAW0D,sBAClC,MAAM,IAAIvD,MAAMkD,GAGjB,MAAO,QAAQG,EAASW,QAAQlC,GAAIuB,EAASC,OAAO,GAEtD,CAEOH,eAAe6B,EAAalD,EAAYrB,EAAciE,GAC5D,OAAOtB,MAAM,GAADnD,OAAIqC,EAAY,KAAArC,OAAI6B,GAAM,IAClCmB,EACHQ,KAAMC,KAAKC,UAAU,CAAElD,OAAMiE,WAC3B/E,MAAM0D,IACR,GAAIA,EAASC,SAAWzD,EAAAA,EAAW0D,sBAClC,MAAM,IAAIvD,MAAMkD,GAGjB,OAAOG,EAASC,MAAM,GAExB,CAEOH,eAAe8B,EAAenD,GACpC,OAAOsB,MAAM,GAADnD,OAAIsC,EAAc,KAAAtC,OAAI6B,GAAMkB,GAAerD,MAAM0D,IAC5D,GAAIA,EAASC,SAAWzD,EAAAA,EAAW0D,sBAClC,MAAM,IAAIvD,MAAMkD,GAGjB,OAAOG,EAASC,MAAM,GAExB,CAEOH,eAAe+B,EAAkBhB,EAAoBiB,GAC3D,OAAO/B,MAAM,GAADnD,OAAIqC,EAAY,KAAArC,OAAIiE,EAAU,kBAAAjE,OAAiBkF,GAAiBnC,GAAerD,MAAM0D,IAChG,GAAIA,EAASC,SAAWzD,EAAAA,EAAW0D,sBAClC,MAAM,IAAIvD,MAAMkD,GAGjB,OAAOG,EAASC,MAAM,GAExB,C,iCClMA,MASazD,EAAa,CACzBC,GAVU,IAWV2B,QAVe,IAWf2D,SAPgB,IAQhB1D,YAVmB,IAWnB3B,aAVoB,IAWpBwD,sBAR6B,I","sources":["components/password-toggle.tsx","pages/login.tsx","utilities/api.ts","utilities/status-code.ts"],"sourcesContent":["import { useState } from \"react\";\nimport { AiFillEye } from \"react-icons/ai\";\nimport { AiFillEyeInvisible } from \"react-icons/ai\";\n\nfunction PasswordToggle(className: string | undefined): [string, JSX.Element] {\n\tconst [visible, setVisibility] = useState(false);\n\n\tconst button = (\n\t\t<button type=\"button\" className={className} onClick={() => setVisibility((visible) => !visible)}>\n\t\t\t{visible ? <AiFillEyeInvisible /> : <AiFillEye />}\n\t\t</button>\n\t);\n\n\tconst passwordType = visible ? \"text\" : \"password\";\n\n\treturn [passwordType, button];\n}\n\nexport default PasswordToggle;\n","import { ChangeEvent, useEffect, useRef, useState } from \"react\";\nimport { Login as ApiLogin, Auth } from \"utilities/api\";\nimport { StatusCode } from \"utilities/status-code\";\nimport { BsPersonFillDown } from \"react-icons/bs\";\nimport { IoPersonSharp } from \"react-icons/io5\";\nimport { useNavigate } from \"react-router-dom\";\nimport { MdLock } from \"react-icons/md\";\n\nimport PasswordToggle from \"components/password-toggle\";\n\nfunction Login() {\n\tconst [{ username, password }, setForm] = useState({\n\t\tusername: \"\",\n\t\tpassword: \"\",\n\t});\n\tconst usernameRef = useRef<HTMLInputElement>(null);\n\tconst passwordRef = useRef<HTMLInputElement>(null);\n\tconst navigate = useNavigate();\n\n\tuseEffect(() => {\n\t\tAuth()\n\t\t\t.then((statusCode) => {\n\t\t\t\tswitch (statusCode) {\n\t\t\t\t\tcase StatusCode.OK:\n\t\t\t\t\t\treturn navigate(\"/tracker\");\n\t\t\t\t\tcase StatusCode.UNAUTHORIZED:\n\t\t\t\t\t\treturn;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Recieved an unexpected status code :: ${statusCode}.`);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(alert);\n\t}, [navigate]);\n\n\tconst [passwordType, button] = PasswordToggle(\"text-2xl text-gray-400 text-2xl text-gray-400\");\n\n\tconst onChange = (event: ChangeEvent<HTMLInputElement>) => {\n\t\tconst { name, value } = event.target;\n\n\t\tif (name === \"username\") {\n\t\t\tusernameRef.current?.setCustomValidity(\"\");\n\t\t} else {\n\t\t\tpasswordRef.current?.setCustomValidity(\"\");\n\t\t}\n\n\t\tsetForm((prev) => ({ ...prev, [name]: value }));\n\t};\n\n\tconst onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n\t\tevent.preventDefault();\n\n\t\tApiLogin(username, password)\n\t\t\t.then((statusCode) => {\n\t\t\t\tswitch (statusCode) {\n\t\t\t\t\tcase StatusCode.CREATED:\n\t\t\t\t\t\treturn navigate(\"/tracker\");\n\t\t\t\t\tcase StatusCode.BAD_REQUEST:\n\t\t\t\t\t\tusernameRef.current?.setCustomValidity(\"Invalid username or password.\");\n\t\t\t\t\t\tpasswordRef.current?.setCustomValidity(\"Invalid username or password.\");\n\t\t\t\t\t\tusernameRef.current?.reportValidity();\n\t\t\t\t\t\tpasswordRef.current?.reportValidity();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Recieved an unexpected status code :: ${statusCode}.`);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(alert);\n\t};\n\n\treturn (\n\t\t<form onSubmit={onSubmit} className=\"h-full max-w-[720px] mx-auto px-4 py-20 flex flex-col\">\n\t\t\t<h1 className=\"flex justify-center text-9xl mb-8 text-blue-600 drop-shadow-md\">\n\t\t\t\t<BsPersonFillDown />\n\t\t\t</h1>\n\t\t\t<div className=\"flex flex-col gap-4 mb-auto\">\n\t\t\t\t<div className=\"flex bg-gray-200 p-3 px-5 gap-3 rounded-full shadow-md\">\n\t\t\t\t\t<IoPersonSharp className=\"text-2xl text-gray-400\" />\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\tref={usernameRef}\n\t\t\t\t\t\tplaceholder=\"Username\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"bg-transparent w-full outline-none placeholder:text-gray-400\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex bg-gray-200 p-3 px-5 gap-3 rounded-full shadow-md\">\n\t\t\t\t\t<MdLock className=\"text-2xl text-center text-gray-400\" />\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\tref={passwordRef}\n\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\ttype={passwordType}\n\t\t\t\t\t\tclassName=\"bg-transparent w-full outline-none placeholder:text-gray-400\"\n\t\t\t\t\t/>\n\t\t\t\t\t{button}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"p-3 px-5 text-center\">\n\t\t\t\t\t<a href=\"..\" className=\"text-gray-400\">\n\t\t\t\t\t\tforgot password?\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"flex flex-col gap-4 items-center\">\n\t\t\t\t<button\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tclassName=\" text-white font-bold tracking-wider py-3 w-1/2 rounded-full shadow-md bg-blue-500 hover:bg-blue-600 transition-colors\"\n\t\t\t\t>\n\t\t\t\t\tLogin\n\t\t\t\t</button>\n\t\t\t\t<a\n\t\t\t\t\thref=\"/sign-up\"\n\t\t\t\t\tclassName=\"bg-transparent text-blue-500 font-bold tracking-wider text-center py-3 w-1/2 rounded-full hover:text-blue-600 transition-colors\"\n\t\t\t\t>\n\t\t\t\t\tSign Up\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</form>\n\t);\n}\n\nexport default Login;\n","import { Category } from \"pages/tracker/utilities/types\";\nimport { GetTransactionsData } from \"pages/tracker/transactions/utilities/types\";\n\nimport camelcaseKeys from \"camelcase-keys\";\nimport { StatusCode } from \"./status-code\";\n\nexport type StatusCode = number;\n\nconst API_URL =\n\t!process.env.NODE_ENV || process.env.NODE_ENV === \"development\"\n\t\t? \"http://127.0.0.1:8000/api\"\n\t\t: \"https://expenses-tracker.shuttleapp.rs/api\";\nconst USER_URL = `${API_URL}/user`;\nconst AUTH_URL = `${USER_URL}/auth`;\nconst TRAKCER_URL = `${AUTH_URL}/tracker`;\nconst CATEGORY_URL = `${TRAKCER_URL}/category`;\nconst CATEGORIES_URL = `${TRAKCER_URL}/categories`;\n\nconst CAMELCASEKEYS_OPTIONS = { deep: true };\n\nconst MAIN_REQUEST: RequestInit = {\n\theaders: {\n\t\t\"Content-Type\": \"application/json\",\n\t},\n\tcredentials: \"include\",\n};\n\nconst POST_METHOD: RequestInit = {\n\t...MAIN_REQUEST,\n\tmethod: \"POST\",\n};\n\nconst GET_METHOD: RequestInit = {\n\t...MAIN_REQUEST,\n\tmethod: \"GET\",\n};\n\nconst DELETE_METHOD: RequestInit = {\n\t...MAIN_REQUEST,\n\tmethod: \"DELETE\",\n};\n\nconst PATCH_METHOD: RequestInit = {\n\t...MAIN_REQUEST,\n\tmethod: \"PATCH\",\n};\n\nconst ERROR_MESSAGE = \"The server encountered an error. Please try again later.\";\n\nexport async function Auth(): Promise<StatusCode> {\n\treturn fetch(`${AUTH_URL}`, GET_METHOD).then((response) => {\n\t\tif (response.status === StatusCode.INTERNAL_SERVER_ERROR) {\n\t\t\tthrow new Error(ERROR_MESSAGE);\n\t\t}\n\n\t\treturn response.status;\n\t});\n}\n\nexport async function SignUp(username: string, password: string): Promise<StatusCode> {\n\treturn fetch(`${USER_URL}/sign-up`, {\n\t\t...POST_METHOD,\n\t\tbody: JSON.stringify({ username, password }),\n\t}).then((response) => {\n\t\tif (response.status === StatusCode.INTERNAL_SERVER_ERROR) {\n\t\t\tthrow new Error(ERROR_MESSAGE);\n\t\t}\n\n\t\treturn response.status;\n\t});\n}\n\nexport async function Login(username: string, password: string): Promise<StatusCode> {\n\treturn fetch(`${USER_URL}/login`, {\n\t\t...POST_METHOD,\n\t\tbody: JSON.stringify({ username, password }),\n\t}).then((response) => {\n\t\tif (response.status === StatusCode.INTERNAL_SERVER_ERROR) {\n\t\t\tthrow new Error(ERROR_MESSAGE);\n\t\t}\n\n\t\treturn response.status;\n\t});\n}\n\nexport async function Logout(): Promise<StatusCode> {\n\treturn fetch(`${USER_URL}/logout`, DELETE_METHOD).then((response) => {\n\t\tif (response.status === StatusCode.INTERNAL_SERVER_ERROR) {\n\t\t\tthrow new Error(ERROR_MESSAGE);\n\t\t}\n\n\t\treturn response.status;\n\t});\n}\n\nexport async function GetCategories(): Promise<[Category[], StatusCode]> {\n\treturn fetch(`${CATEGORIES_URL}`, GET_METHOD).then(async (response) => {\n\t\tif (response.status === StatusCode.INTERNAL_SERVER_ERROR) {\n\t\t\tthrow new Error(ERROR_MESSAGE);\n\t\t}\n\n\t\treturn [camelcaseKeys(await response.json(), CAMELCASEKEYS_OPTIONS) as Category[], response.status];\n\t});\n}\n\nexport async function GetTransactions(categoryId: string): Promise<[GetTransactionsData, StatusCode]> {\n\treturn fetch(`${CATEGORY_URL}/${categoryId}/transactions`, GET_METHOD).then(async (response) => {\n\t\tif (response.status === StatusCode.INTERNAL_SERVER_ERROR) {\n\t\t\tthrow new Error(ERROR_MESSAGE);\n\t\t}\n\n\t\tconst data = camelcaseKeys(await response.json(), CAMELCASEKEYS_OPTIONS) as GetTransactionsData;\n\n\t\tdata.transactions = data.transactions.map((transaction) => ({\n\t\t\t...transaction,\n\t\t\tcreatedAt: new Date(transaction.createdAt),\n\t\t}));\n\n\t\treturn [data, response.status];\n\t});\n}\n\nexport async function AddCategory(name: string, icon: string): Promise<[Category, StatusCode]> {\n\treturn fetch(`${CATEGORIES_URL}`, {\n\t\t...POST_METHOD,\n\t\tbody: JSON.stringify({ name, icon }),\n\t}).then(async (response) => {\n\t\tif (response.status === StatusCode.INTERNAL_SERVER_ERROR) {\n\t\t\tthrow new Error(ERROR_MESSAGE);\n\t\t}\n\n\t\treturn [\n\t\t\t{\n\t\t\t\t...(await response.json()),\n\t\t\t\tname,\n\t\t\t\ticon,\n\t\t\t\ttransactions: 0,\n\t\t\t\tamount: 0,\n\t\t\t\tprecent: 0,\n\t\t\t\tcolor: \"#000000\",\n\t\t\t},\n\t\t\tresponse.status,\n\t\t];\n\t});\n}\n\nexport async function AddTransaction(\n\tcategoryId: string,\n\tdescription: string,\n\tamount: number,\n): Promise<[String, StatusCode]> {\n\treturn fetch(`${CATEGORY_URL}/${categoryId}/transactions`, {\n\t\t...POST_METHOD,\n\t\tbody: JSON.stringify({ amount, description }),\n\t}).then(async (response) => {\n\t\tif (response.status === StatusCode.INTERNAL_SERVER_ERROR) {\n\t\t\tthrow new Error(ERROR_MESSAGE);\n\t\t}\n\n\t\treturn [(await response.json()).id, response.status];\n\t});\n}\n\nexport async function EditCategory(id: string, name: string, icon: string): Promise<StatusCode> {\n\treturn fetch(`${CATEGORY_URL}/${id}`, {\n\t\t...PATCH_METHOD,\n\t\tbody: JSON.stringify({ name, icon }),\n\t}).then((response) => {\n\t\tif (response.status === StatusCode.INTERNAL_SERVER_ERROR) {\n\t\t\tthrow new Error(ERROR_MESSAGE);\n\t\t}\n\n\t\treturn response.status;\n\t});\n}\n\nexport async function DeleteCategory(id: string): Promise<StatusCode> {\n\treturn fetch(`${CATEGORIES_URL}/${id}`, DELETE_METHOD).then((response) => {\n\t\tif (response.status === StatusCode.INTERNAL_SERVER_ERROR) {\n\t\t\tthrow new Error(ERROR_MESSAGE);\n\t\t}\n\n\t\treturn response.status;\n\t});\n}\n\nexport async function DeleteTransaction(categoryId: string, transactionId: string): Promise<StatusCode> {\n\treturn fetch(`${CATEGORY_URL}/${categoryId}/transactions/${transactionId}`, DELETE_METHOD).then((response) => {\n\t\tif (response.status === StatusCode.INTERNAL_SERVER_ERROR) {\n\t\t\tthrow new Error(ERROR_MESSAGE);\n\t\t}\n\n\t\treturn response.status;\n\t});\n}\n","const OK = 200;\nconst CREATED = 201;\n\nconst BAD_REQUEST = 400;\nconst UNAUTHORIZED = 401;\nconst CONFLICT = 409;\n\nconst INTERNAL_SERVER_ERROR = 500;\n\nexport const StatusCode = {\n\tOK,\n\tCREATED,\n\tCONFLICT,\n\tBAD_REQUEST,\n\tUNAUTHORIZED,\n\tINTERNAL_SERVER_ERROR,\n};\n"],"names":["className","visible","setVisibility","useState","_jsx","type","onClick","children","AiFillEyeInvisible","AiFillEye","username","password","setForm","usernameRef","useRef","passwordRef","navigate","useNavigate","useEffect","Auth","then","statusCode","StatusCode","OK","UNAUTHORIZED","Error","concat","catch","alert","passwordType","button","PasswordToggle","onChange","event","name","value","target","_usernameRef$current","_passwordRef$current","current","setCustomValidity","prev","_jsxs","onSubmit","preventDefault","ApiLogin","_usernameRef$current2","_passwordRef$current2","_usernameRef$current3","_passwordRef$current3","CREATED","BAD_REQUEST","reportValidity","BsPersonFillDown","IoPersonSharp","id","ref","placeholder","MdLock","href","USER_URL","AUTH_URL","TRAKCER_URL","CATEGORY_URL","CATEGORIES_URL","CAMELCASEKEYS_OPTIONS","deep","MAIN_REQUEST","headers","credentials","POST_METHOD","method","GET_METHOD","DELETE_METHOD","PATCH_METHOD","ERROR_MESSAGE","async","fetch","response","status","INTERNAL_SERVER_ERROR","SignUp","body","JSON","stringify","Login","Logout","GetCategories","camelcaseKeys","json","GetTransactions","categoryId","data","transactions","map","transaction","createdAt","Date","AddCategory","icon","amount","precent","color","AddTransaction","description","EditCategory","DeleteCategory","DeleteTransaction","transactionId","CONFLICT"],"sourceRoot":""}