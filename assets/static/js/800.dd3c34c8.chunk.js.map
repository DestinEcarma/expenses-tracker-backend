{"version":3,"file":"static/js/800.dd3c34c8.chunk.js","mappings":"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","sources":["components/password-toggle.tsx","pages/sign-up.tsx","utilities/api.ts","utilities/status-code.ts"],"sourcesContent":["import { useState } from \"react\";\r\nimport { AiFillEye } from \"react-icons/ai\";\r\nimport { AiFillEyeInvisible } from \"react-icons/ai\";\r\n\r\nfunction PasswordToggle(className: string | undefined): [string, JSX.Element] {\r\n\tconst [visible, setVisibility] = useState(false);\r\n\r\n\tconst button = (\r\n\t\t<button\r\n\t\t\ttype=\"button\"\r\n\t\t\tclassName={className}\r\n\t\t\tonClick={() => setVisibility((visible) => !visible)}\r\n\t\t>\r\n\t\t\t{visible ? <AiFillEyeInvisible /> : <AiFillEye />}\r\n\t\t</button>\r\n\t);\r\n\r\n\tconst passwordType = visible ? \"text\" : \"password\";\r\n\r\n\treturn [passwordType, button];\r\n}\r\n\r\nexport default PasswordToggle;\r\n","import { BsPersonFillDown } from \"react-icons/bs\";\r\nimport { IoPersonSharp } from \"react-icons/io5\";\r\nimport { ChangeEvent, useEffect, useRef, useState } from \"react\";\r\nimport { MdLock } from \"react-icons/md\";\r\nimport { SignUp as ApiSignUp, Auth } from \"utilities/api\";\r\nimport PasswordToggle from \"components/password-toggle\";\r\nimport { StatusCode } from \"utilities/status-code\";\r\n\r\nfunction SignUp() {\r\n\tconst [{ username, password, passwordConfirm }, setForm] = useState({\r\n\t\tusername: \"\",\r\n\t\tpassword: \"\",\r\n\t\tpasswordConfirm: \"\",\r\n\t});\r\n\r\n\tconst usernameRef = useRef<HTMLInputElement>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst statusCode = await Auth();\r\n\r\n\t\t\t\tif (statusCode === StatusCode.OK) {\r\n\t\t\t\t\treturn window.location.replace(\"/tracker\");\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t}\r\n\t\t})();\r\n\t}, []);\r\n\r\n\tconst onChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst { name, value } = event.target;\r\n\r\n\t\tif (name === \"username\") {\r\n\t\t\tusernameRef.current?.setCustomValidity(\"\");\r\n\t\t}\r\n\r\n\t\tsetForm((prev) => ({ ...prev, [name]: value }));\r\n\t};\r\n\r\n\tconst onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\ttry {\r\n\t\t\tlet statusCode = await ApiSignUp(username, password);\r\n\r\n\t\t\tswitch (statusCode) {\r\n\t\t\t\tcase StatusCode.OK:\r\n\t\t\t\tcase StatusCode.CREATED:\r\n\t\t\t\t\treturn window.location.replace(\"/tracker\");\r\n\t\t\t\tcase StatusCode.CONFLICT:\r\n\t\t\t\t\tusernameRef.current?.setCustomValidity(\"Username already exists.\");\r\n\t\t\t\t\treturn usernameRef.current?.reportValidity();\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn console.error(\r\n\t\t\t\t\t\t`Status Code: ${statusCode} :: An error occurred.`\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst [passwordType, button] = PasswordToggle(\r\n\t\t\"text-2xl text-gray-400 text-2xl text-gray-400\"\r\n\t);\r\n\r\n\treturn (\r\n\t\t<form\r\n\t\t\tonSubmit={onSubmit}\r\n\t\t\tclassName=\"h-full max-w-[720px] mx-auto px-4 py-20 flex flex-col\"\r\n\t\t>\r\n\t\t\t<h1 className=\"flex justify-center text-9xl mb-8 text-blue-600 drop-shadow-md\">\r\n\t\t\t\t<BsPersonFillDown />\r\n\t\t\t</h1>\r\n\t\t\t<div className=\"flex flex-col gap-4 mb-auto\">\r\n\t\t\t\t<div className=\"flex bg-gray-200 p-3 px-5 gap-3 rounded-full shadow-md\">\r\n\t\t\t\t\t<IoPersonSharp className=\"text-2xl text-gray-400\" />\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tref={usernameRef}\r\n\t\t\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tpattern=\"^[a-zA-Z0-9_]{3, 20}$\"\r\n\t\t\t\t\t\ttitle=\"Username must be minimum of 3 characters long and contain only letters (uppercase or lowercase), digits, or underscores.\"\r\n\t\t\t\t\t\tclassName=\"bg-transparent w-full outline-none placeholder:text-gray-400\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"flex bg-gray-200 p-3 px-5 gap-3 rounded-full shadow-md\">\r\n\t\t\t\t\t<MdLock className=\"text-2xl text-gray-400\" />\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\ttype={passwordType}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tpattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*]).{8,}$\"\r\n\t\t\t\t\t\ttitle=\"Password must contain at least one digit, one lowercase letter, one uppercase letter, one special character, and be at least 8 characters long.\"\r\n\t\t\t\t\t\tclassName=\"bg-transparent w-full outline-none placeholder:text-gray-400\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{button}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"flex bg-gray-200 p-3 px-5 gap-3 rounded-full shadow-md\">\r\n\t\t\t\t\t<MdLock className=\"text-2xl text-gray-400\" />\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"passwordConfirm\"\r\n\t\t\t\t\t\tvalue={passwordConfirm}\r\n\t\t\t\t\t\tplaceholder=\"password Confirm\"\r\n\t\t\t\t\t\ttype={passwordType}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tpattern={password}\r\n\t\t\t\t\t\ttitle=\"Password does not match.\"\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tclassName=\"bg-transparent w-full outline-none placeholder:text-gray-400\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{button}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"flex flex-col gap-4 items-center\">\r\n\t\t\t\t<button className=\"text-white font-bold tracking-wider py-3 w-1/2 rounded-full shadow-md bg-blue-500 hover:bg-blue-600 transition-colors\">\r\n\t\t\t\t\tSign Up\r\n\t\t\t\t</button>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"/login\"\r\n\t\t\t\t\tclassName=\"bg-transparent text-blue-500 font-bold tracking-wider text-center py-3 w-1/2 rounded-full hover:text-blue-600 transition-colors\"\r\n\t\t\t\t>\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default SignUp;\r\n","import {\r\n\tCategoryExpense,\r\n\tRawCategoryExpense,\r\n} from \"pages/tracker/utilities/types\";\r\nimport { Transactions } from \"pages/tracker/transactions/utilities/types\";\r\n\r\nimport data from \"pages/tracker/utilities/sample-data\";\r\nimport camelcaseKeys from \"camelcase-keys\";\r\nimport { STATUS_CODES } from \"http\";\r\n\r\nexport type StatusCode = number;\r\n\r\n// const API_URL = \"https://expenses-tracker.shuttleapp.rs/api\";\r\nconst API_URL = \"https://expenses-tracker.shuttleapp.rs/api\";\r\nconst USER_URL = `${API_URL}/user`;\r\nconst AUTH_URL = `${USER_URL}/auth`;\r\nconst TRAKCER_URL = `${AUTH_URL}/tracker`;\r\nconst CATEGORY_URL = `${TRAKCER_URL}/category`;\r\nconst CATEGORIES_URL = `${TRAKCER_URL}/categories`;\r\n\r\nconst HEADERS = {\r\n\theaders: {\r\n\t\t\"Content-Type\": \"application/json\",\r\n\t},\r\n};\r\n\r\nconst POST_METHOD = {\r\n\tmethod: \"POST\",\r\n\t...HEADERS,\r\n};\r\n\r\nconst GET_METHOD = {\r\n\tmethod: \"GET\",\r\n\t...HEADERS,\r\n};\r\n\r\nconst DELETE_METHOD = {\r\n\tmethod: \"DELETE\",\r\n\t...HEADERS,\r\n};\r\n\r\nconst PATCH_METHOD = {\r\n\tmethod: \"PATCH\",\r\n\t...HEADERS,\r\n};\r\n\r\nexport async function Auth(): Promise<StatusCode> {\r\n\treturn fetch(`${AUTH_URL}`, { ...GET_METHOD, credentials: \"include\" }).then(\r\n\t\t(response) => response.status\r\n\t);\r\n}\r\n\r\nexport async function SignUp(\r\n\tusername: string,\r\n\tpassword: string\r\n): Promise<StatusCode> {\r\n\treturn fetch(`${USER_URL}/sign-up`, {\r\n\t\t...POST_METHOD,\r\n\t\tcredentials: \"include\",\r\n\t\tbody: JSON.stringify({ username, password }),\r\n\t}).then((response) => response.status);\r\n}\r\n\r\nexport async function Login(\r\n\tusername: string,\r\n\tpassword: string\r\n): Promise<StatusCode> {\r\n\treturn fetch(`${USER_URL}/login`, {\r\n\t\t...POST_METHOD,\r\n\t\tcredentials: \"include\",\r\n\t\tbody: JSON.stringify({ username, password }),\r\n\t}).then((response) => response.status);\r\n}\r\n\r\nexport async function Logout(): Promise<StatusCode> {\r\n\treturn fetch(`${USER_URL}/logout`, {\r\n\t\t...DELETE_METHOD,\r\n\t\tcredentials: \"include\",\r\n\t}).then((response) => response.status);\r\n}\r\n\r\nexport async function AddCategory(\r\n\tname: string,\r\n\ticon: string\r\n): Promise<[CategoryExpense, StatusCode]> {\r\n\treturn fetch(`${CATEGORIES_URL}`, {\r\n\t\t...POST_METHOD,\r\n\t\tcredentials: \"include\",\r\n\t\tbody: JSON.stringify({ name, icon }),\r\n\t}).then(async (response) => {\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\t...(await response.json()),\r\n\t\t\t\tname,\r\n\t\t\t\ticon,\r\n\t\t\t\ttransactions: 0,\r\n\t\t\t\tamount: 0,\r\n\t\t\t\tprecent: 0,\r\n\t\t\t\tcolor: \"#000000\",\r\n\t\t\t},\r\n\t\t\tresponse.status,\r\n\t\t];\r\n\t});\r\n}\r\n\r\nexport async function AddTransaction(\r\n\tcategoryId: string,\r\n\tdescription: string,\r\n\tamount: number\r\n): Promise<[String, StatusCode]> {\r\n\treturn fetch(`${CATEGORY_URL}/${categoryId}/transactions`, {\r\n\t\t...POST_METHOD,\r\n\t\tcredentials: \"include\",\r\n\t\tbody: JSON.stringify({ amount, description }),\r\n\t}).then(async (response) => [(await response.json()).id, response.status]);\r\n}\r\n\r\nexport async function EditCategory(\r\n\tid: string,\r\n\tname: string,\r\n\ticon: string\r\n): Promise<StatusCode> {\r\n\treturn fetch(`${CATEGORY_URL}/${id}`, {\r\n\t\t...PATCH_METHOD,\r\n\t\tcredentials: \"include\",\r\n\t\tbody: JSON.stringify({ name, icon }),\r\n\t}).then((response) => response.status);\r\n}\r\n\r\nexport async function DeleteCategory(id: string): Promise<StatusCode> {\r\n\treturn fetch(`${CATEGORIES_URL}/${id}`, {\r\n\t\t...DELETE_METHOD,\r\n\t\tcredentials: \"include\",\r\n\t}).then((response) => response.status);\r\n}\r\n\r\nexport async function DeleteTransaction(\r\n\tcategoryId: string,\r\n\ttransactionId: string\r\n): Promise<StatusCode> {\r\n\treturn fetch(`${CATEGORY_URL}/${categoryId}/transactions/${transactionId}`, {\r\n\t\t...DELETE_METHOD,\r\n\t\tcredentials: \"include\",\r\n\t}).then((response) => response.status);\r\n}\r\n\r\nexport async function GetCategories(): Promise<\r\n\t[RawCategoryExpense[], StatusCode]\r\n> {\r\n\treturn fetch(`${CATEGORIES_URL}`, {\r\n\t\t...GET_METHOD,\r\n\t\tcredentials: \"include\",\r\n\t}).then(async (response) => [\r\n\t\tcamelcaseKeys(await response.json(), {\r\n\t\t\tdeep: true,\r\n\t\t}) as RawCategoryExpense[],\r\n\t\tresponse.status,\r\n\t]);\r\n}\r\n\r\nexport async function GetCategoryFromId(\r\n\tid: string\r\n): Promise<[RawCategoryExpense, StatusCode]> {\r\n\treturn fetch(`${CATEGORIES_URL}/${id}`, {\r\n\t\t...GET_METHOD,\r\n\t\tcredentials: \"include\",\r\n\t}).then(async (response) => [\r\n\t\tcamelcaseKeys(await response.json(), {\r\n\t\t\tdeep: true,\r\n\t\t}) as RawCategoryExpense,\r\n\t\tresponse.status,\r\n\t]);\r\n}\r\n\r\nexport async function GetTransactions(\r\n\tcategoryId: string\r\n): Promise<[Transactions[], StatusCode]> {\r\n\treturn fetch(`${CATEGORY_URL}/${categoryId}/transactions`, {\r\n\t\t...GET_METHOD,\r\n\t\tcredentials: \"include\",\r\n\t}).then(async (response) => [\r\n\t\t(\r\n\t\t\tcamelcaseKeys(await response.json(), {\r\n\t\t\t\tdeep: true,\r\n\t\t\t}) as Transactions[]\r\n\t\t).map((transaction) => ({\r\n\t\t\t...transaction,\r\n\t\t\tcreatedAt: new Date(transaction.createdAt),\r\n\t\t})),\r\n\t\tresponse.status,\r\n\t]);\r\n}\r\n","const OK = 200;\r\nconst CREATED = 201;\r\n\r\nconst BAD_REQUEST = 400;\r\nconst UNAUTHORIZED = 401;\r\nconst CONFLICT = 409;\r\n\r\nconst INTERNAL_SERVER_ERROR = 500;\r\n\r\nexport const StatusCode = {\r\n\tOK,\r\n\tCREATED,\r\n\tBAD_REQUEST,\r\n\tUNAUTHORIZED,\r\n\tCONFLICT,\r\n\tINTERNAL_SERVER_ERROR,\r\n};\r\n"],"names":["className","visible","setVisibility","useState","_jsx","type","onClick","children","AiFillEyeInvisible","AiFillEye","username","password","passwordConfirm","setForm","usernameRef","useRef","useEffect","Auth","StatusCode","OK","window","location","replace","error","console","onChange","event","name","value","target","_usernameRef$current","current","setCustomValidity","prev","passwordType","button","PasswordToggle","_jsxs","onSubmit","async","_usernameRef$current2","_usernameRef$current3","preventDefault","statusCode","ApiSignUp","CREATED","CONFLICT","reportValidity","concat","BsPersonFillDown","IoPersonSharp","ref","placeholder","required","pattern","title","MdLock","href","USER_URL","AUTH_URL","TRAKCER_URL","CATEGORY_URL","CATEGORIES_URL","HEADERS","headers","POST_METHOD","method","GET_METHOD","DELETE_METHOD","PATCH_METHOD","fetch","credentials","then","response","status","SignUp","body","JSON","stringify","Login","Logout","AddCategory","icon","json","transactions","amount","precent","color","AddTransaction","categoryId","description","id","EditCategory","DeleteCategory","DeleteTransaction","transactionId","GetCategories","camelcaseKeys","deep","GetCategoryFromId","GetTransactions","map","transaction","createdAt","Date","BAD_REQUEST","UNAUTHORIZED","INTERNAL_SERVER_ERROR"],"sourceRoot":""}