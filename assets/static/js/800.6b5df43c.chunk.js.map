{"version":3,"file":"static/js/800.6b5df43c.chunk.js","mappings":"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","sources":["components/password-toggle.tsx","pages/sign-up.tsx","utilities/api.ts","utilities/status-code.ts"],"sourcesContent":["import { useState } from \"react\";\nimport { AiFillEye } from \"react-icons/ai\";\nimport { AiFillEyeInvisible } from \"react-icons/ai\";\n\nfunction PasswordToggle(className: string | undefined): [string, JSX.Element] {\n\tconst [visible, setVisibility] = useState(false);\n\n\tconst button = (\n\t\t<button type=\"button\" className={className} onClick={() => setVisibility((visible) => !visible)}>\n\t\t\t{visible ? <AiFillEyeInvisible /> : <AiFillEye />}\n\t\t</button>\n\t);\n\n\tconst passwordType = visible ? \"text\" : \"password\";\n\n\treturn [passwordType, button];\n}\n\nexport default PasswordToggle;\n","import { ChangeEvent, useEffect, useRef, useState } from \"react\";\r\nimport { SignUp as ApiSignUp, Auth } from \"utilities/api\";\r\nimport { StatusCode } from \"utilities/status-code\";\r\nimport { BsPersonFillDown } from \"react-icons/bs\";\r\nimport { IoPersonSharp } from \"react-icons/io5\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { MdLock } from \"react-icons/md\";\r\n\r\nimport PasswordToggle from \"components/password-toggle\";\r\n\r\nfunction SignUp() {\r\n\tconst [{ username, password, passwordConfirm }, setForm] = useState({\r\n\t\tusername: \"\",\r\n\t\tpassword: \"\",\r\n\t\tpasswordConfirm: \"\",\r\n\t});\r\n\tconst [disabled, setDisabled] = useState(false);\r\n\r\n\tconst usernameRef = useRef<HTMLInputElement>(null);\r\n\tconst navigate = useNavigate();\r\n\r\n\tuseEffect(() => {\r\n\t\tAuth()\r\n\t\t\t.then((statusCode) => {\r\n\t\t\t\tswitch (statusCode) {\r\n\t\t\t\t\tcase StatusCode.OK:\r\n\t\t\t\t\t\treturn navigate(\"/tracker\");\r\n\t\t\t\t\tcase StatusCode.UNAUTHORIZED:\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow new Error(`Recieved an unexpected status code :: ${statusCode}.`);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(alert);\r\n\t}, [navigate]);\r\n\r\n\tconst onChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst { name, value } = event.target;\r\n\r\n\t\tusernameRef.current?.setCustomValidity(\"\");\r\n\r\n\t\tsetForm((prev) => ({ ...prev, [name]: value }));\r\n\t};\r\n\r\n\tconst onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n\t\tevent.preventDefault();\r\n\t\tsetDisabled(true);\r\n\r\n\t\tApiSignUp(username, password)\r\n\t\t\t.then((statusCode) => {\r\n\t\t\t\tswitch (statusCode) {\r\n\t\t\t\t\tcase StatusCode.CREATED:\r\n\t\t\t\t\t\treturn window.location.replace(\"/tracker\");\r\n\t\t\t\t\tcase StatusCode.CONFLICT:\r\n\t\t\t\t\t\tusernameRef.current?.setCustomValidity(\"Username already exists.\");\r\n\t\t\t\t\t\tusernameRef.current?.reportValidity();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow new Error(`Recieved an unexpected status code :: ${statusCode}.`);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(alert)\r\n\t\t\t.finally(() => setDisabled(false));\r\n\t};\r\n\r\n\tconst [passwordType, button] = PasswordToggle(\"text-2xl text-gray-400 text-2xl text-gray-400\");\r\n\r\n\treturn (\r\n\t\t<form onSubmit={onSubmit} className=\"h-full max-w-[720px] mx-auto px-4 py-20 flex flex-col\">\r\n\t\t\t<h1 className=\"flex justify-center text-9xl mb-8 text-blue-600 drop-shadow-md\">\r\n\t\t\t\t<BsPersonFillDown />\r\n\t\t\t</h1>\r\n\t\t\t<div className=\"flex flex-col gap-4 mb-auto\">\r\n\t\t\t\t<div className=\"flex bg-gray-200 p-3 px-5 gap-3 rounded-full shadow-md\">\r\n\t\t\t\t\t<IoPersonSharp className=\"text-2xl text-gray-400\" />\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tref={usernameRef}\r\n\t\t\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tpattern=\"^[a-zA-Z0-9_]{3,20}$\"\r\n\t\t\t\t\t\ttitle=\"Username must be minimum of 3 and a max of 20 characters long and contain only letters (uppercase or lowercase), digits, or underscores.\"\r\n\t\t\t\t\t\tclassName=\"bg-transparent w-full outline-none placeholder:text-gray-400\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"flex bg-gray-200 p-3 px-5 gap-3 rounded-full shadow-md\">\r\n\t\t\t\t\t<MdLock className=\"text-2xl text-gray-400\" />\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\ttype={passwordType}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tpattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\w]).{8,}$\"\r\n\t\t\t\t\t\ttitle=\"Password must contain at least one digit, one lowercase letter, one uppercase letter, one special character, and be at least 8 characters long.\"\r\n\t\t\t\t\t\tclassName=\"bg-transparent w-full outline-none placeholder:text-gray-400\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{button}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"flex bg-gray-200 p-3 px-5 gap-3 rounded-full shadow-md\">\r\n\t\t\t\t\t<MdLock className=\"text-2xl text-gray-400\" />\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"passwordConfirm\"\r\n\t\t\t\t\t\tvalue={passwordConfirm}\r\n\t\t\t\t\t\tplaceholder=\"password Confirm\"\r\n\t\t\t\t\t\ttype={passwordType}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tpattern={`^${password}$`}\r\n\t\t\t\t\t\ttitle=\"Password does not match.\"\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tclassName=\"bg-transparent w-full outline-none placeholder:text-gray-400\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{button}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"flex flex-col gap-4 items-center\">\r\n\t\t\t\t<button\r\n\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tclassName=\"text-white font-bold tracking-wider py-3 w-1/2 rounded-full shadow-md bg-blue-500 hover:bg-blue-600 transition-colors disabled:bg-gray-400\"\r\n\t\t\t\t>\r\n\t\t\t\t\tSign Up\r\n\t\t\t\t</button>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"/login\"\r\n\t\t\t\t\tclassName=\"bg-transparent text-blue-500 font-bold tracking-wider text-center py-3 w-1/2 rounded-full hover:text-blue-600 transition-colors\"\r\n\t\t\t\t>\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default SignUp;\r\n","import { Category } from \"pages/tracker/utilities/types\";\r\nimport { GetTransactionsData } from \"pages/tracker/transactions/utilities/types\";\r\n\r\nimport camelcaseKeys from \"camelcase-keys\";\r\nimport { StatusCode as StatusCodes } from \"./status-code\";\r\n\r\nexport type StatusCode = number;\r\n\r\nconst API_URL =\r\n\t!process.env.NODE_ENV || process.env.NODE_ENV === \"development\"\r\n\t\t? \"http://127.0.0.1:8000/api\"\r\n\t\t: \"https://expenses-tracker.shuttleapp.rs/api\";\r\nconst USER_URL = `${API_URL}/user`;\r\nconst AUTH_URL = `${USER_URL}/auth`;\r\nconst TRAKCER_URL = `${AUTH_URL}/tracker`;\r\nconst CATEGORY_URL = `${TRAKCER_URL}/category`;\r\nconst CATEGORIES_URL = `${TRAKCER_URL}/categories`;\r\n\r\nconst CAMELCASEKEYS_OPTIONS = { deep: true };\r\n\r\nconst MAIN_REQUEST: RequestInit = {\r\n\theaders: {\r\n\t\t\"Content-Type\": \"application/json\",\r\n\t},\r\n\tcredentials: \"include\",\r\n};\r\n\r\nconst POST_METHOD: RequestInit = {\r\n\t...MAIN_REQUEST,\r\n\tmethod: \"POST\",\r\n};\r\n\r\nconst GET_METHOD: RequestInit = {\r\n\t...MAIN_REQUEST,\r\n\tmethod: \"GET\",\r\n};\r\n\r\nconst DELETE_METHOD: RequestInit = {\r\n\t...MAIN_REQUEST,\r\n\tmethod: \"DELETE\",\r\n};\r\n\r\nconst PATCH_METHOD: RequestInit = {\r\n\t...MAIN_REQUEST,\r\n\tmethod: \"PATCH\",\r\n};\r\n\r\nconst ERROR_MESSAGE = \"The server encountered an error. Please try again later.\";\r\n\r\nexport async function Auth(): Promise<StatusCode> {\r\n\treturn fetch(`${AUTH_URL}`, GET_METHOD).then((response) => {\r\n\t\tif (response.status === StatusCodes.INTERNAL_SERVER_ERROR) {\r\n\t\t\tthrow new Error(ERROR_MESSAGE);\r\n\t\t}\r\n\r\n\t\treturn response.status;\r\n\t});\r\n}\r\n\r\nexport async function SignUp(username: string, password: string): Promise<StatusCode> {\r\n\treturn fetch(`${USER_URL}/sign-up`, {\r\n\t\t...POST_METHOD,\r\n\t\tbody: JSON.stringify({ username, password }),\r\n\t}).then((response) => {\r\n\t\tif (response.status === StatusCodes.INTERNAL_SERVER_ERROR) {\r\n\t\t\tthrow new Error(ERROR_MESSAGE);\r\n\t\t}\r\n\r\n\t\treturn response.status;\r\n\t});\r\n}\r\n\r\nexport async function Login(username: string, password: string): Promise<StatusCode> {\r\n\treturn fetch(`${USER_URL}/login`, {\r\n\t\t...POST_METHOD,\r\n\t\tbody: JSON.stringify({ username, password }),\r\n\t}).then((response) => {\r\n\t\tif (response.status === StatusCodes.INTERNAL_SERVER_ERROR) {\r\n\t\t\tthrow new Error(ERROR_MESSAGE);\r\n\t\t}\r\n\r\n\t\treturn response.status;\r\n\t});\r\n}\r\n\r\nexport async function Logout(): Promise<StatusCode> {\r\n\treturn fetch(`${USER_URL}/logout`, DELETE_METHOD).then((response) => {\r\n\t\tif (response.status === StatusCodes.INTERNAL_SERVER_ERROR) {\r\n\t\t\tthrow new Error(ERROR_MESSAGE);\r\n\t\t}\r\n\r\n\t\treturn response.status;\r\n\t});\r\n}\r\n\r\nexport async function GetCategories(): Promise<[Category[], StatusCode]> {\r\n\treturn fetch(`${CATEGORIES_URL}`, GET_METHOD).then(async (response) => {\r\n\t\tif (response.status === StatusCodes.INTERNAL_SERVER_ERROR) {\r\n\t\t\tthrow new Error(ERROR_MESSAGE);\r\n\t\t}\r\n\r\n\t\treturn [camelcaseKeys(await response.json(), CAMELCASEKEYS_OPTIONS) as Category[], response.status];\r\n\t});\r\n}\r\n\r\nexport async function GetTransactions(categoryId: string): Promise<[GetTransactionsData, StatusCode]> {\r\n\treturn fetch(`${CATEGORY_URL}/${categoryId}/transactions`, GET_METHOD).then(async (response) => {\r\n\t\tif (response.status === StatusCodes.INTERNAL_SERVER_ERROR) {\r\n\t\t\tthrow new Error(ERROR_MESSAGE);\r\n\t\t}\r\n\r\n\t\tconst data = camelcaseKeys(await response.json(), CAMELCASEKEYS_OPTIONS) as GetTransactionsData;\r\n\r\n\t\tdata.transactions = data.transactions.map((transaction) => ({\r\n\t\t\t...transaction,\r\n\t\t\tcreatedAt: new Date(transaction.createdAt),\r\n\t\t}));\r\n\r\n\t\treturn [data, response.status];\r\n\t});\r\n}\r\n\r\nexport async function AddCategory(name: string, icon: string): Promise<[Category, StatusCode]> {\r\n\treturn fetch(`${CATEGORIES_URL}`, {\r\n\t\t...POST_METHOD,\r\n\t\tbody: JSON.stringify({ name, icon }),\r\n\t}).then(async (response) => {\r\n\t\tif (response.status === StatusCodes.INTERNAL_SERVER_ERROR) {\r\n\t\t\tthrow new Error(ERROR_MESSAGE);\r\n\t\t}\r\n\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\t...(await response.json()),\r\n\t\t\t\tname,\r\n\t\t\t\ticon,\r\n\t\t\t\ttransactions: 0,\r\n\t\t\t\tamount: 0,\r\n\t\t\t\tprecent: 0,\r\n\t\t\t\tcolor: \"#000000\",\r\n\t\t\t},\r\n\t\t\tresponse.status,\r\n\t\t];\r\n\t});\r\n}\r\n\r\nexport async function AddTransaction(categoryId: string, description: string, amount: number): Promise<StatusCode> {\r\n\treturn fetch(`${CATEGORY_URL}/${categoryId}/transactions`, {\r\n\t\t...POST_METHOD,\r\n\t\tbody: JSON.stringify({ amount, description }),\r\n\t}).then(async (response) => {\r\n\t\tif (response.status === StatusCodes.INTERNAL_SERVER_ERROR) {\r\n\t\t\tthrow new Error(ERROR_MESSAGE);\r\n\t\t}\r\n\r\n\t\treturn response.status;\r\n\t});\r\n}\r\n\r\nexport async function EditCategory(id: string, name: string, icon: string): Promise<StatusCode> {\r\n\treturn fetch(`${CATEGORY_URL}/${id}`, {\r\n\t\t...PATCH_METHOD,\r\n\t\tbody: JSON.stringify({ name, icon }),\r\n\t}).then((response) => {\r\n\t\tif (response.status === StatusCodes.INTERNAL_SERVER_ERROR) {\r\n\t\t\tthrow new Error(ERROR_MESSAGE);\r\n\t\t}\r\n\r\n\t\treturn response.status;\r\n\t});\r\n}\r\n\r\nexport async function DeleteCategory(id: string): Promise<StatusCode> {\r\n\treturn fetch(`${CATEGORIES_URL}/${id}`, DELETE_METHOD).then((response) => {\r\n\t\tif (response.status === StatusCodes.INTERNAL_SERVER_ERROR) {\r\n\t\t\tthrow new Error(ERROR_MESSAGE);\r\n\t\t}\r\n\r\n\t\treturn response.status;\r\n\t});\r\n}\r\n\r\nexport async function DeleteTransaction(categoryId: string, transactionId: string): Promise<StatusCode> {\r\n\treturn fetch(`${CATEGORY_URL}/${categoryId}/transactions/${transactionId}`, DELETE_METHOD).then((response) => {\r\n\t\tif (response.status === StatusCodes.INTERNAL_SERVER_ERROR) {\r\n\t\t\tthrow new Error(ERROR_MESSAGE);\r\n\t\t}\r\n\r\n\t\treturn response.status;\r\n\t});\r\n}\r\n","const OK = 200;\nconst CREATED = 201;\n\nconst BAD_REQUEST = 400;\nconst UNAUTHORIZED = 401;\nconst CONFLICT = 409;\n\nconst INTERNAL_SERVER_ERROR = 500;\n\nexport const StatusCode = {\n\tOK,\n\tCREATED,\n\tCONFLICT,\n\tBAD_REQUEST,\n\tUNAUTHORIZED,\n\tINTERNAL_SERVER_ERROR,\n};\n"],"names":["className","visible","setVisibility","useState","_jsx","type","onClick","children","AiFillEyeInvisible","AiFillEye","username","password","passwordConfirm","setForm","disabled","setDisabled","usernameRef","useRef","navigate","useNavigate","useEffect","Auth","then","statusCode","StatusCode","OK","UNAUTHORIZED","Error","concat","catch","alert","onChange","event","_usernameRef$current","name","value","target","current","setCustomValidity","prev","passwordType","button","PasswordToggle","_jsxs","onSubmit","preventDefault","ApiSignUp","_usernameRef$current2","_usernameRef$current3","CREATED","window","location","replace","CONFLICT","reportValidity","finally","BsPersonFillDown","IoPersonSharp","ref","placeholder","required","pattern","title","MdLock","href","USER_URL","AUTH_URL","TRAKCER_URL","CATEGORY_URL","CATEGORIES_URL","CAMELCASEKEYS_OPTIONS","deep","MAIN_REQUEST","headers","credentials","POST_METHOD","method","GET_METHOD","DELETE_METHOD","PATCH_METHOD","ERROR_MESSAGE","async","fetch","response","status","StatusCodes","INTERNAL_SERVER_ERROR","SignUp","body","JSON","stringify","Login","Logout","GetCategories","camelcaseKeys","json","GetTransactions","categoryId","data","transactions","map","transaction","createdAt","Date","AddCategory","icon","amount","precent","color","AddTransaction","description","EditCategory","id","DeleteCategory","DeleteTransaction","transactionId","BAD_REQUEST"],"sourceRoot":""}